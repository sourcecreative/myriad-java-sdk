/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven'
    id 'signing'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    
    compile 'com.squareup.retrofit2:retrofit:2.5.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.5.0'
	compile 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.14.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.14.0'
    compile 'com.squareup.okhttp3:okhttp:3.14.0'

    compile 'io.reactivex.rxjava2:rxjava:2.2.7'
	
	compileOnly 'org.projectlombok:lombok:1.18.6'
	annotationProcessor 'org.projectlombok:lombok:1.18.6'    

	// https://mvnrepository.com/artifact/org.jeasy/easy-rules
//	compile group: 'org.jeasy', name: 'easy-rules', version: '3.2.0', ext: 'pom'
	compile group: 'org.jeasy', name: 'easy-rules-core', version: '3.2.0'
	compile group: 'org.jeasy', name: 'easy-rules-mvel', version: '3.2.0'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.6.2'
    testCompile 'org.mockito:mockito-core:2.21.0'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.14.0'
    testCompile 'org.awaitility:awaitility-scala:2.0.0'
    
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    if (project.hasProperty('sign')) {
        signing {
            sign configurations.archives
        }
    }
    
    
}

group = 'io.myriad.client'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
}
